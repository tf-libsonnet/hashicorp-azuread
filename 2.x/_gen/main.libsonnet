local d = (import 'github.com/jsonnet-libs/docsonnet/doc-util/main.libsonnet');
{
  '#':: d.pkg(name='azuread', url='', help='The `azuread` package contains functions and utilities for setting up the provider, resources, and data\nsources of the [azuread Terraform provider](TODO) using Jsonnet.\n\nThis package is autogenerated from the [tf-libsonnet/libgenerator](https://github.com/tf-libsonnet/libgenerator)\nproject.\n'),
  provider: (import 'provider_azuread.libsonnet'),
  administrative_unit: (import 'resources/administrative_unit.libsonnet'),
  administrative_unit_member: (import 'resources/administrative_unit_member.libsonnet'),
  app_role_assignment: (import 'resources/app_role_assignment.libsonnet'),
  application: (import 'resources/application.libsonnet'),
  application_certificate: (import 'resources/application_certificate.libsonnet'),
  application_federated_identity_credential: (import 'resources/application_federated_identity_credential.libsonnet'),
  application_password: (import 'resources/application_password.libsonnet'),
  application_pre_authorized: (import 'resources/application_pre_authorized.libsonnet'),
  claims_mapping_policy: (import 'resources/claims_mapping_policy.libsonnet'),
  conditional_access_policy: (import 'resources/conditional_access_policy.libsonnet'),
  custom_directory_role: (import 'resources/custom_directory_role.libsonnet'),
  directory_role: (import 'resources/directory_role.libsonnet'),
  directory_role_assignment: (import 'resources/directory_role_assignment.libsonnet'),
  directory_role_member: (import 'resources/directory_role_member.libsonnet'),
  group: (import 'resources/group.libsonnet'),
  group_member: (import 'resources/group_member.libsonnet'),
  invitation: (import 'resources/invitation.libsonnet'),
  named_location: (import 'resources/named_location.libsonnet'),
  service_principal: (import 'resources/service_principal.libsonnet'),
  service_principal_certificate: (import 'resources/service_principal_certificate.libsonnet'),
  service_principal_claims_mapping_policy_assignment: (import 'resources/service_principal_claims_mapping_policy_assignment.libsonnet'),
  service_principal_delegated_permission_grant: (import 'resources/service_principal_delegated_permission_grant.libsonnet'),
  service_principal_password: (import 'resources/service_principal_password.libsonnet'),
  service_principal_token_signing_certificate: (import 'resources/service_principal_token_signing_certificate.libsonnet'),
  synchronization_job: (import 'resources/synchronization_job.libsonnet'),
  synchronization_secret: (import 'resources/synchronization_secret.libsonnet'),
  user: (import 'resources/user.libsonnet'),
  data: (import 'data/main.libsonnet'),
}
